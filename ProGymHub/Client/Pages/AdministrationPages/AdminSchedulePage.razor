@page "/aschedule"
@using BaseLibrary.DTOs
@using BaseLibrary.Responses
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="schedule">
    <table>
        <thead>
            <tr>
                <th></th>
                <th>Sunday</th>
                <th>Monday</th>
                <th>Tuesday</th>
                <th>Wednesday</th>
                <th>Thursday</th>
                <th>Friday</th>
                <th>Saturday</th>
            </tr>
        </thead>
        <tbody>
            @for (int hour = 8; hour <= 20; hour++)
            {
                <tr>
                    <td>@($"{hour:00}:00")</td>
                    @for (int day = 0; day < 7; day++)
                    {
                        var lesson = lessons?.FirstOrDefault(l => (int)l.Day == day && l.StartTime.Hours == hour);
                        <td>
                            @if (lesson != null)
                            {
                                <div class="lesson">
                                    <strong>@lesson.Name</strong>
                                    <div>@lesson.StartTime.ToString(@"hh\:mm") - @lesson.EndTime.ToString(@"hh\:mm")</div>
                                </div>
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private List<LessonDTO>? lessons;

    protected override async Task OnInitializedAsync()
    {
        await LoadAllLessons();
    }

    private async Task LoadAllLessons()
    {
        try
        {
            var client = HttpClientFactory.CreateClient("SystemApiClient");
            lessons = await client.GetFromJsonAsync<List<LessonDTO>>("api/lesson");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching all lessons: {ex.Message}");
        }
    }
}

<style>
    .schedule {
        width: 100%;
        overflow-x: auto;
        background-color: #bde0fe;
    }

        .schedule table {
            width: 100%;
            border-collapse: collapse;
            table-layout: fixed; /* Ensures columns are of equal width */
        }

        .schedule th, .schedule td {
            border: 1px solid #000;
            text-align: center;
            vertical-align: middle;
            padding: 5px;
            height: 60px; /* Ensures rows are of equal height */
        }

        .schedule th {
            background-color: #7209b7;
            color: #ffffff;
        }

        .schedule td {
            height: 60px;
            position: relative;
            width: 14.285%; /* Ensures each day column is the same width */
        }

        .schedule .lesson-box {
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .schedule .lesson {
            background-color: #e4c1f9;
            border: 1px solid #000;
            padding: 5px;
            margin: 2px;
        }

</style>

